<?xml version="1.0" encoding="UTF-8"?>
<aiml version="1.0.1" encoding="UTF-8">
<!--
	pattern writing rule
	python-aiml의 한계로 json을 pattern으로 바로 던질 수 없기 때문에 다음과 같은 rule을 적용함.
	1. 무조건 대문자로 쓸 것 - 소문자를 인식하지 못함

	2. *을 제외한 특수문자를 쓰지 말 것 - 특수문자를 인식하지 못함 

	3. json의 key와 원하는 value를 연속해서 쓰고/좌우로 *을 쓸 것
	ex) dialogstatus가 start임을 원할 때 * DIALOGSTATUS START *

	4. 여러 key에 대한 조건이 필요할 경우 key의 알파벳 순서로 작성하고/각각의 조건 사이에 *을 쓸 것
	ex) 3의 조건에 area:Music이 추가적으로 필요한 경우 * AREA MUSIC * DIALOGSTATUS START *

	5. json의 value가 list인 경우 LISTSTART ... LISTEND 형식으로 작성됨.
	따라서 list 안에 어떤 value를 원하면 "KEY * VALUE *"을/시작 value 필터를 걸고 싶으면 "KEY LISTSTART VALUE *"등의 방식으로 작성

	6. key/value 안에 있는 특수문자는 모두 무시됨. 또한/value는 colon-separated로 들어감
	ex) property가 prop-ko:xx 을 원한다면 PROPERTY PROPKO XX * 로 작성
	
	template writing rule
	1. 특정 json key의 값을 원할 때는 [key]와 같이 slot으로 작성 -> nlg module의 postprocess에서 처리할 것임.
	2. 종성에 관계있는 조사(은,는,이,가 등등)은 "받침이 있는 형태의" 조사를 slot으로 작성
	ex) [pTopic][은]... 
-->

	<category>
		<pattern>RECOMMEND</pattern>
		<template>
			노래/앨범/추천
		</template>
	</category>
	<category>
		<pattern>DEBUT</pattern>
		<template>
			데뷔/몇년/언제
		</template>
	</category>
	<category>
		<pattern>SIMILAR</pattern>
		<template>
			비슷/라이벌/스타일
		</template>
	</category>
	<category>
		<pattern>TV</pattern>
		<template>
			TV/예능/영화
		</template>
	</category>
	<category>
		<pattern>RECORD</pattern>
		<template>
			수상/기록
		</template>
	</category>
	<category>
		<pattern>MISC</pattern>
		<template>
			누구/몇살/결혼/근황/해외활동
		</template>
	</category>

</aiml>
